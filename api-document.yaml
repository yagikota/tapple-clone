openapi: 3.0.2
info:
  title: CA Tapple API
  description: |-
    <b>CA Tapple API仕様</b><br>
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1/
tags:
  - name: user
    description: ユーザー関連API
  - name: room
    description: ルーム関連API

paths:
  /users/{user_id}/profile:
    get:
      tags:
        - user
      summary: ユーザー詳細表示API（メッセージ詳細内）
      description: |
        指定したユーザー詳細内容を取得します。
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileGetResponse"
        400:
          description: リクエストが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBadRequest"
        500:
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseInternalServerError"
      x-codegen-request-body-name: body
  /users/{user_id}/profile_images:
    post:
      tags:
        - user
      summary: プロフィール写真保存API
      description: |
        指定したユーザーのプロフィール写真を保存します。
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileImageCreateResponse"
        required: true
      responses:
        400:
          description: リクエストが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBadRequest"
        500:
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseInternalServerError"
  /users/{user_id}/rooms:
    get:
      tags:
        - room
      summary: チャットルーム一覧表示API
      description: |
        指定したユーザーのチャットルームの一覧を取得します。
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomListResponse"
        400:
          description: リクエストが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBadRequest"
        500:
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseInternalServerError"
      x-codegen-request-body-name: body
  /users/{user_id}/rooms/{room_id}:
    get:
      tags:
        - room
      summary: チャットルーム詳細表示API
      description: |
        指定したチャットルームのメッセージ内容を取得します。
      parameters:
        - in: query
          name: message_id
          required: false
          schema:
            type: integer
          description: ページング用のクエリパラメータ
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRoomGetResponse"
        400:
          description: リクエストが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBadRequest"
        500:
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseInternalServerError"
      x-codegen-request-body-name: body
  /users/{user_id}/rooms/{room_id}/messages:
    post:
      tags:
        - room
      summary: メッセージ保存API
      description: |
        送信メッセージを保存します。
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageCreateRequest"
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageCreateResponse"
        400:
          description: リクエストが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBadRequest"
        500:
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseInternalServerError"
  /users/{user_id}/rooms/{room_id}/images:
    post:
      tags:
        - room
      summary: 画像送信API
      description: |
        トークルームで画像を送信します。
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                # 'file' will be the field name in this multipart request
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageCreateResponse"
        400:
          description: リクエストが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBadRequest"
        500:
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseInternalServerError"
  /users/{user_id}/rooms/{room_id}/messages/{message_id}:
    delete:
      tags:
        - room
      summary: メッセージ削除API
      description: |
        メッセージを削除します。
      responses:
        200:
          description: A successful response.
        400:
          description: リクエストが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBadRequest"
        500:
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseInternalServerError"
components:
  schemas:
    UserRoomGetResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: ルームID
        name:
          type: string
          example: かな
          description: ルームの名前
        icon:
          type: string
          example: "female/n000009/main_0001_01.jpg"
          description: ルームアイコン
        users:
          type: array
          items:
            $ref: "#/components/schemas/RoomUserInfo"
          description: 同じチャットルームのユーザー
        messages:
          type: array
          items:
            $ref: "#/components/schemas/MessageGetResponse"
          description: チャットルーム内のメッセージの一覧
        is_last:
          type: boolean
          example: false
          description: 最後のメッセージリスト
    UserProfileGetResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: ユーザーID
        name:
          type: string
          example: かな
          description: ユーザーの名前
        age:
          type: integer
          example: 24
          description: 年齢
        location:
          type: string
          example: 神奈川
          description: 所在地
        is_principal:
          type: boolean
          example: true
          description: 本人認証
        tags_count:
          type: integer
          example: 10
          description: 設定しているタグの数
        profile_images:
          type: array
          items:
            $ref: "#/components/schemas/ProfileImageInfo"
        hobbies:
          type: array
          items:
            $ref: "#/components/schemas/UserHobbyInfo"
    MessageGetResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: メッセージID
        user_id:
          type: integer
          example: 1
          description: ユーザーID
        content:
          type: string
          example: 予定いれておきます！
          description: メッセージ内容
        created_at:
          type: string
          example: "2020-01-31T23:59:59+09:00"
          format: date-time
          description: メッセージの送信日時
    LatestMessageInfo:
      type: object
      properties:
        id:
          type: integer
          example: 4
          description: 最新メッセージID
        user_id:
          type: integer
          example: 2
          description: ユーザーID
        content:
          type: string
          example: いつにしましょうか！
          description: 最後のメッセージの内容
        created_at:
          type: string
          example: "2020-01-31T23:59:59+09:00"
          format: date-time
          description: 最後のメッセージの送信日時
    ProfileImageInfo:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: プロフィール写真ID
        image_path:
          type: string
          example: "female/n000009/main_0001_01.jpg"
          description: 写真URL
    UserHobbyInfo:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: 趣味ID
        tag:
          type: string
          example: 韓国ドラマ
          description: 趣味タグの名前
    RoomUserInfo:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: ユーザーID
        name:
          type: string
          example: かなこ
          description: 名前
        icon:
          type: string
          example: "female/n000009/main_0001_01.jpg"
          description: アイコン
        gender:
          type: integer
          example: 1
          description: 0 男 | 1 女
        birthday:
          type: string
          example: "2020-01-31"
          format: date
          description: 最後のメッセージの送信日時
        location:
          type: string
          example: 神奈川
          description: 都道府県名
    RoomInfo:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: ルームID
        unread:
          type: integer
          example: 3
          description: 未読件数
        is_pinned:
          type: boolean
          example: true
          description: ピン留め(0 されていない, 1 されている)
        name:
          type: string
          example: かなこ
          description: ルームの名前（2人の場合相手の名前）
        icon:
          type: string
          example: "female/n000009/main_0001_01.jpg"
          description: アイコン（2人の場合、相手のアイコン）
        sub_name:
          type: string
          example: "23歳・神奈川"
          description: 相手の年齢・所在地
        latest_message:
          $ref: "#/components/schemas/LatestMessageInfo"
    RoomListResponse:
      type: object
      properties:
        rooms:
          type: array
          items:
            $ref: "#/components/schemas/RoomInfo"
          description: チャットルーム一覧
    MessageCreateRequest:
      type: object
      properties:
        content:
          type: string
          example: マッチできて嬉しいです！
          description: メッセージ内容
    MessageCreateResponse:
      type: object
      properties:
        id:
          type: integer
          example: 4
          description: 最新メッセージID
        user_id:
          type: integer
          example: 2
          description: ユーザーID
        content:
          type: string
          example: マッチできて嬉しいです！
          description: 最後のメッセージの内容
        created_at:
          type: string
          example: "2020-01-31T23:59:59+09:00"
          format: date-time
          description: 最後のメッセージの送信日時
    MessageDeleteResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: メッセージID
        user_id:
          type: integer
          example: 1
          description: ユーザーID
        room_id:
          type: integer
          example: 1
        deleted_at:
          type: string
          example: "2020-01-31T23:59:59+09:00"
          description: メッセージが削除された日時
    MessageDeleteRequest:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: メッセージID
    UserProfileImageCreateResponse:
      type: object
      properties:
        image:
          $ref: "#/components/schemas/ProfileImageCreateResponse"
          description: 保存する写真の情報
    ProfileImageCreateResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: 写真ID
        path:
          type: string
          example: https://pbs.twimg.com/media/EbtbZwdU8AU_6DW.jpg:small
          description: 写真URL
    ErrorResponseBadRequest:
      title: ErrorResponseBadRequest
      type: object
      description: BadRequest時のエラーレスポンス
      properties:
        message:
          type: string
          description: エラーメッセージサンプル
          example: リクエストが不正です
      required:
        - code
        - message
    ErrorResponseInternalServerError:
      title: ErrorResponseInternalServerError
      type: object
      description: サーバーエラー時のエラーレスポンス
      properties:
        message:
          type: string
          description: エラーメッセージサンプル
          example: サーバーエラーが発生しました
      required:
        - message
